language: cpp

env:
  global:
    - LANG="zh_CN.UTF-8"
    - CMAKE_PREFIX=$HOME/prebuilt/cmake ;
    - CMAKE_VERSION=3.5.1 ;
  matrix:
    - TRAVIS_OS_NAME=osx CC=clang CXX=clang++
    - TRAVIS_OS_NAME=osx CC=gcc CXX=g++
    - TRAVIS_OS_NAME=linux CC=gcc CXX=g++
    - TRAVIS_OS_NAME=linux CC=gcc-4.9 CXX=g++-4.9
    - TRAVIS_OS_NAME=linux CC=gcc-5 CXX=g++-5
    - TRAVIS_OS_NAME=linux CC=clang-3.8 CXX=clang++-3.8

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.8 main"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add - ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CC" == "gcc-4.9" ] ; then sudo apt-get install -qq gcc-4.9-multilib g++-4.9-multilib; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CC" == "gcc-5" ] ; then sudo apt-get install -qq gcc-5-multilib g++-5-multilib; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CC" == "clang-3.8" ] ; then sudo apt-get install --allow-unauthenticated -qq clang-3.8; fi

before_script:
  - REPO_DIR=$PWD;
  - cd /tmp
  - if [ ! -e "$CMAKE_PREFIX/bin/cmake" ]; then
        mkdir -p "$CMAKE_PREFIX";
        wget -c "https://github.com/Kitware/CMake/archive/v$CMAKE_VERSION.tar.gz" -O CMake-$CMAKE_VERSION.tar.gz ;
        tar -xvf CMake-$CMAKE_VERSION.tar.gz;
        cd CMake-$CMAKE_VERSION ;
        ./bootstrap --prefix=$CMAKE_PREFIX;
        make -j4 install;
        cd -;
        rm -rf CMake-$CMAKE_VERSION CMake-$CMAKE_VERSION.tar.gz;
    fi
  - cd "$REPO_DIR";

script:
  - REPO_DIR=$PWD;
  - mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;
  - echo "$CMAKE_PREFIX/bin/cmake .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX" ;
  - $CMAKE_PREFIX/bin/cmake .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX ;
  - make -j4

after_success:
  - test/unit_test
  - bin/atframe_utils_sample

cache:
  apt: true
  ccache: true
  directories:
  - $HOME/prebuilt

branches:
  only:
    - master

notifications:
  email: false
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
