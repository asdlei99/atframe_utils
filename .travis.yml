language: cpp

env:
  global:
    - LANG="zh_CN.UTF-8"
    - CMAKE_PREFIX=$HOME/prebuilt/cmake ;
    - CMAKE_LINUX_URL=https://cmake.org/files/v3.9/cmake-3.9.3-Linux-x86_64.sh ;
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "IsYMriUmpPtJZJ3DmXoVKEPdUOfYS5vvyEXBC5STROyA5UtwqJGwgXUITiP06EjdPBDwWbDdM4sTtWIjPk4YonVblYTDESIbQ2Y13zA9d+iWvMEd4gBThY4BYnkzFfbSdIJ/CZQnWxgeWJ4ilSMQ9QpJ3fCmKi4ADbs400HnCooej8o96aVfTtiugzsTBfVPVDnpFzroomWuGEeXjcyjHYp7376Dtm8qxWJh6CtSQMDWBfTRB+uFMlOecrE9aUMQgrBVT/8+NrzGV/KKuVz/Ve0zLxo85hptZuDqnX4edg3N1hOEApsI9Ppp4fYqyvs1KcAF3fPakqs/jdKjhCUrGXbpSWWRsRp0/UyoMkJZwNiCzJQAnVQ+D9bcSlTvJzLeD+9rrvCSoAK2TACM5U80SJXjYYgds3cjjHrbFGoZtksFHudTyketPUnpHM80LcMA9d2njiPSfhARCg8AlUyaeVoqKMGfVUpqQeJrlW4Wik/OWrOWbIuIKnopVkymhd9tm66DkZNpZdKDiaws8zCAfQtkVPZpaQkQ9OPfg00XD/WZWScrgvEwbJH9007SOPbUjtvX6Z0SXm0AAuiz9UIaDaqVNK+cGhC82l1tcYMg01CsQ8wT2kDoky6FsDBrNGJQBJPZzmLtUA465QlT2NtZgsIEgkUAUeRGSq7xoZxo+dE="

matrix:
  include:
    - os: osx
      env: USE_CC=clang USE_CXX=clang++ CMAKE_BIN=cmake CTEST_BIN=ctest
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc USE_CXX=g++ CMAKE_BIN=$CMAKE_PREFIX/bin/cmake CTEST_BIN=$CMAKE_PREFIX/bin/ctest
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.4 USE_CXX=g++-4.4 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake CTEST_BIN=$CMAKE_PREFIX/bin/ctest
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.4
            - g++-4.4-multilib
            - gcc-4.4
            - gcc-4.4-multilib
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.9 USE_CXX=g++-4.9 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake CTEST_BIN=$CMAKE_PREFIX/bin/ctest
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - gcc-4.9-multilib
            - g++-4.9
            - g++-4.9-multilib
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-7 USE_CXX=g++-7 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake CTEST_BIN=$CMAKE_PREFIX/bin/ctest
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - gcc-7-multilib
            - g++-7
            - g++-7-multilib
    # - os: linux
    #   dist: trusty
    #   sudo: required
    #   env: USE_CC=clang USE_CXX=clang++ CMAKE_BIN=$CMAKE_PREFIX/bin/cmake CTEST_BIN=$CMAKE_PREFIX/bin/ctest
    - os: linux
      dist: trusty
      sudo: required
      env: 
        - COVERITY_SCAN_BRANCH=1
        - COVERITY_SCAN_PROJECT_NAME="$TRAVIS_REPO_SLUG"
        - COVERITY_SCAN_BRANCH_PATTERN="master"
        - COVERITY_SCAN_NOTIFICATION_EMAIL="owt5008137@live.com"
        - COVERITY_SCAN_BUILD_COMMAND_PREPEND="REPO_DIR=$PWD; mkdir -p $REPO_DIR/build; cd $REPO_DIR/build; $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON; make clean"
        - COVERITY_SCAN_BUILD_COMMAND="make -j 4"
        - CMAKE_BIN=$CMAKE_PREFIX/bin/cmake 
        - CTEST_BIN=$CMAKE_PREFIX/bin/ctest

before_install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -qq update; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; brew upgrade cmake; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.8 main"; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add - ; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi
    - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then

          if [ ! -e "$CMAKE_BIN" ]; then

            mkdir -p "$CMAKE_PREFIX";

            curl --insecure -L "$CMAKE_LINUX_URL" -o cmake-linux.sh ;

            bash cmake-linux.sh --skip-license --prefix=$CMAKE_PREFIX ;

          fi

      fi

script:
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then
    
      export CC=$USE_CC ;

      export CXX=$USE_CXX ;

      REPO_DIR=$PWD;

      if [ -e "$REPO_DIR/build" ]; then rm -rf "$REPO_DIR/build"; fi

      mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;

      echo "$CMAKE_BIN .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX" ;

      $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX ;

      $CMAKE_BIN --build .

    fi


after_success:
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then

      $CTEST_BIN . -V
    
    fi

cache:
  apt: true
  ccache: true
  directories:
  - $CMAKE_PREFIX

branches:
  only:
    - master

notifications:
  email:
    recipients:
      - admin@owent.net
      - owt5008137@live.com
    on_success: change
    on_failure: change
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/3c7b3960fa5b787ad061
    on_success: change  # options: [always|never|change] default: always
    on_failure: change  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
