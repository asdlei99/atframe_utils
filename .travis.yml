language: cpp

env:
  global:
    - LANG="zh_CN.UTF-8"
matrix:
  include:
    - os: osx
      env: USE_CC=clang USE_CXX=clang++
    - os: osx
      env: USE_CC=gcc USE_CXX=g++
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc USE_CXX=g++
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.4 USE_CXX=g++-4.4
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.9 USE_CXX=g++-4.9
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-6 USE_CXX=g++-6
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=clang USE_CXX=clang++
    # - os: linux
    #   dist: trusty
    #   sudo: required
    #   env: USE_CC=clang-3.8 USE_CXX=clang++-3.8

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - ppa:george-edison55/cmake-3.x
      # - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
      #   key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

    packages:
      - g++-4.4
      - g++-4.4-multilib
      - gcc-4.4
      - gcc-4.4-multilib
      - gcc-4.9
      - gcc-4.9-multilib
      - g++-4.9
      - g++-4.9-multilib
      - gcc-6
      - gcc-6-multilib
      - g++-6
      - g++-6-multilib
      - clang
      - cmake
      ## - libc++1
      ## - libc++-dev
      ## - libc++abi1
      ## - libc++abi-dev
      # - clang-3.8
      # - libclang-common-3.8-dev
      # - libclang-3.8-dev

before_install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -qq update; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.8 main"; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add - ; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi
#
install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then sudo apt-get install -qq -y cmake; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ] ; then brew install cmake; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$USE_CC" == "gcc-4.9" ] ; then sudo apt-get install -qq gcc-4.9-multilib g++-4.9-multilib; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$USE_CC" == "gcc-5" ] ; then sudo apt-get install -qq gcc-5-multilib g++-5-multilib; fi
#   - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$USE_CC" == "clang-3.8" ] ; then sudo apt-get install --allow-unauthenticated -qq clang-3.8 libclang-common-3.8-dev libclang-3.8-dev; fi

script:
  - export CC=$USE_CC
  - export CXX=$USE_CXX
  - REPO_DIR=$PWD;
  - mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;
  - echo "cmake .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX" ;
  - cmake .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX ;
  - make -j4

after_success:
  - test/atframe_utils_unit_test
  - bin/atframe_utils_sample

cache:
  apt: true
  ccache: true

branches:
  only:
    - master

notifications:
  email: false
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
